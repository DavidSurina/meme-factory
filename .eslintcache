[{"C:\\Users\\gruma\\Desktop\\wbs_school_exercises\\Portfolio related\\Meme-factory\\meme-factory\\src\\index.js":"1","C:\\Users\\gruma\\Desktop\\wbs_school_exercises\\Portfolio related\\Meme-factory\\meme-factory\\src\\App.js":"2"},{"size":219,"mtime":1610972499139,"results":"3","hashOfConfig":"4"},{"size":1591,"mtime":1611059054052,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"15teex5",{"filePath":"9","messages":"10","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gruma\\Desktop\\wbs_school_exercises\\Portfolio related\\Meme-factory\\meme-factory\\src\\index.js",[],["11","12"],"C:\\Users\\gruma\\Desktop\\wbs_school_exercises\\Portfolio related\\Meme-factory\\meme-factory\\src\\App.js",["13","14","15","16","17","18"],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":8,"column":10,"nodeType":"25","messageId":"26","endLine":8,"endColumn":22},{"ruleId":"23","severity":1,"message":"27","line":8,"column":24,"nodeType":"25","messageId":"26","endLine":8,"endColumn":39},{"ruleId":"23","severity":1,"message":"28","line":9,"column":10,"nodeType":"25","messageId":"26","endLine":9,"endColumn":23},{"ruleId":"23","severity":1,"message":"29","line":9,"column":25,"nodeType":"25","messageId":"26","endLine":9,"endColumn":41},{"ruleId":"30","severity":1,"message":"31","line":23,"column":17,"nodeType":"32","endLine":23,"endColumn":39},{"ruleId":"33","severity":1,"message":"34","line":44,"column":9,"nodeType":"35","endLine":44,"endColumn":51},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'firstCaption' is assigned a value but never used.","Identifier","unusedVar","'setFirstCaption' is assigned a value but never used.","'secondCaption' is assigned a value but never used.","'setSecondCaption' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'memeUrl' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]